---- PostgreSQL database dump---- Dumped from database version 13.3-- Dumped by pg_dump version 13.3SET statement_timeout = 0;SET lock_timeout = 0;SET idle_in_transaction_session_timeout = 0;SET client_encoding = 'UTF8';SET standard_conforming_strings = on;SELECT pg_catalog.set_config('search_path', '', false);SET check_function_bodies = false;SET xmloption = content;SET client_min_messages = warning;SET row_security = off;SET default_tablespace = '';SET default_table_access_method = heap;---- Name: codes; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.codes (    id integer NOT NULL,    reset_code integer NOT NULL,    own integer NOT NULL);ALTER TABLE public.codes OWNER TO postgres;---- Name: codes_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.codes_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.codes_id_seq OWNER TO postgres;---- Name: codes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.codes_id_seq OWNED BY public.codes.id;---- Name: comments; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.comments (    comment_id integer NOT NULL,    comment text NOT NULL,    has integer NOT NULL,    owns integer NOT NULL);ALTER TABLE public.comments OWNER TO postgres;---- Name: comments_comment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.comments_comment_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.comments_comment_id_seq OWNER TO postgres;---- Name: comments_comment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.comments_comment_id_seq OWNED BY public.comments.comment_id;---- Name: cookbooks; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.cookbooks (    id integer NOT NULL,    name text NOT NULL,    description text,    contains integer NOT NULL);ALTER TABLE public.cookbooks OWNER TO postgres;---- Name: cookbooks_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.cookbooks_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.cookbooks_id_seq OWNER TO postgres;---- Name: cookbooks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.cookbooks_id_seq OWNED BY public.cookbooks.id;---- Name: cookbooks_lists; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.cookbooks_lists (    id integer NOT NULL,    cookbook_id integer NOT NULL,    recipe_id integer NOT NULL);ALTER TABLE public.cookbooks_lists OWNER TO postgres;---- Name: cookbooks_lists_cookbook_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.cookbooks_lists_cookbook_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.cookbooks_lists_cookbook_id_seq OWNER TO postgres;---- Name: cookbooks_lists_cookbook_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.cookbooks_lists_cookbook_id_seq OWNED BY public.cookbooks_lists.cookbook_id;---- Name: cookbooks_lists_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.cookbooks_lists_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.cookbooks_lists_id_seq OWNER TO postgres;---- Name: cookbooks_lists_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.cookbooks_lists_id_seq OWNED BY public.cookbooks_lists.id;---- Name: history; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.history (    id integer NOT NULL,    userid integer NOT NULL,    recipe integer NOT NULL,    last_view_time time without time zone DEFAULT date_trunc('second'::text, (LOCALTIME)::interval),    last_view_date date DEFAULT CURRENT_DATE);ALTER TABLE public.history OWNER TO postgres;---- Name: history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.history_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.history_id_seq OWNER TO postgres;---- Name: history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.history_id_seq OWNED BY public.history.id;---- Name: ingredient; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.ingredient (    id integer NOT NULL,    recipe_id integer,    ingredient text,    dosage double precision,    unit_name text);ALTER TABLE public.ingredient OWNER TO postgres;---- Name: ingredient_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.ingredient_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.ingredient_id_seq OWNER TO postgres;---- Name: ingredient_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.ingredient_id_seq OWNED BY public.ingredient.id;---- Name: likes; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.likes (    id integer NOT NULL,    like_status integer NOT NULL,    has integer NOT NULL,    own integer NOT NULL);ALTER TABLE public.likes OWNER TO postgres;---- Name: likes_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.likes_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.likes_id_seq OWNER TO postgres;---- Name: likes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.likes_id_seq OWNED BY public.likes.id;---- Name: method; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.method (    recipe_id integer NOT NULL,    method text NOT NULL);ALTER TABLE public.method OWNER TO postgres;---- Name: profiles; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.profiles (    profile_id integer NOT NULL,    first_name text NOT NULL,    last_name text NOT NULL,    display_name text NOT NULL,    profile_pic text NOT NULL,    temp_pic text,    bio text,    custom_url text,    owns integer NOT NULL,    sub_count integer DEFAULT 0,    recipe_count integer DEFAULT 0);ALTER TABLE public.profiles OWNER TO postgres;---- Name: recipes; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.recipes (    id integer NOT NULL,    name text NOT NULL,    description text NOT NULL,    photo text,    serving integer NOT NULL,    num_of_likes integer DEFAULT 0,    num_of_dislikes integer DEFAULT 0,    creates integer NOT NULL,    creator text NOT NULL,    meal_type text NOT NULL,    creation_time time without time zone DEFAULT date_trunc('second'::text, (LOCALTIME)::interval),    creation_date date DEFAULT CURRENT_DATE);ALTER TABLE public.recipes OWNER TO postgres;---- Name: subscribed; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.subscribed (    subscribed_id integer NOT NULL,    contains integer NOT NULL);ALTER TABLE public.subscribed OWNER TO postgres;---- Name: newsfeeds; Type: VIEW; Schema: public; Owner: postgres--CREATE VIEW public.newsfeeds AS SELECT r.id,    r.name,    r.description,    r.photo,    r.serving,    r.creates,    r.creator,    s.contains,    r.num_of_likes AS likes,    r.num_of_dislikes AS dislikes,    p.display_name,    r.creation_time,    r.creation_date   FROM ((public.recipes r     JOIN public.subscribed s ON ((r.creates = s.subscribed_id)))     JOIN public.profiles p ON ((r.creates = p.profile_id)));ALTER TABLE public.newsfeeds OWNER TO postgres;---- Name: newsletters; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.newsletters (    id integer NOT NULL,    subscribed_to boolean NOT NULL,    own integer NOT NULL);ALTER TABLE public.newsletters OWNER TO postgres;---- Name: newsletters_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.newsletters_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.newsletters_id_seq OWNER TO postgres;---- Name: newsletters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.newsletters_id_seq OWNED BY public.newsletters.id;---- Name: profile_subbed; Type: VIEW; Schema: public; Owner: postgres--CREATE VIEW public.profile_subbed AS SELECT p.profile_id,    p.first_name,    p.last_name,    p.display_name,    p.profile_pic,    p.bio,    p.custom_url,    p.sub_count,    p.recipe_count,    s.subscribed_id,    s.contains   FROM (public.profiles p     LEFT JOIN public.subscribed s ON ((p.profile_id = s.subscribed_id)));ALTER TABLE public.profile_subbed OWNER TO postgres;---- Name: subscriber; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.subscriber (    subscriber_id integer NOT NULL,    contains integer NOT NULL);ALTER TABLE public.subscriber OWNER TO postgres;---- Name: profile_subs; Type: VIEW; Schema: public; Owner: postgres--CREATE VIEW public.profile_subs AS SELECT p.profile_id,    p.first_name,    p.last_name,    p.display_name,    p.profile_pic,    p.bio,    p.custom_url,    p.sub_count,    p.recipe_count,    s.subscriber_id,    s.contains   FROM (public.profiles p     LEFT JOIN public.subscriber s ON ((p.profile_id = s.subscriber_id)));ALTER TABLE public.profile_subs OWNER TO postgres;---- Name: profiles_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.profiles_profile_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.profiles_profile_id_seq OWNER TO postgres;---- Name: profiles_profile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.profiles_profile_id_seq OWNED BY public.profiles.profile_id;---- Name: recipes_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.recipes_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.recipes_id_seq OWNER TO postgres;---- Name: recipes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.recipes_id_seq OWNED BY public.recipes.id;---- Name: recipestep; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.recipestep (    recipe_id integer NOT NULL,    step_no integer NOT NULL,    step_comment text NOT NULL,    photo text);ALTER TABLE public.recipestep OWNER TO postgres;---- Name: starred_recipes; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.starred_recipes (    recipe_id integer NOT NULL,    contains integer NOT NULL);ALTER TABLE public.starred_recipes OWNER TO postgres;---- Name: users; Type: TABLE; Schema: public; Owner: postgres--CREATE TABLE public.users (    id integer NOT NULL,    password text NOT NULL,    email text NOT NULL,    CONSTRAINT users_email_check CHECK ((email ~* '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'::text)),    CONSTRAINT users_password_check CHECK ((length(password) > 5)));ALTER TABLE public.users OWNER TO postgres;---- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres--CREATE SEQUENCE public.users_id_seq    AS integer    START WITH 1    INCREMENT BY 1    NO MINVALUE    NO MAXVALUE    CACHE 1;ALTER TABLE public.users_id_seq OWNER TO postgres;---- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres--ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;---- Name: codes id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.codes ALTER COLUMN id SET DEFAULT nextval('public.codes_id_seq'::regclass);---- Name: comments comment_id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.comments ALTER COLUMN comment_id SET DEFAULT nextval('public.comments_comment_id_seq'::regclass);---- Name: cookbooks id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks ALTER COLUMN id SET DEFAULT nextval('public.cookbooks_id_seq'::regclass);---- Name: cookbooks_lists id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks_lists ALTER COLUMN id SET DEFAULT nextval('public.cookbooks_lists_id_seq'::regclass);---- Name: cookbooks_lists cookbook_id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks_lists ALTER COLUMN cookbook_id SET DEFAULT nextval('public.cookbooks_lists_cookbook_id_seq'::regclass);---- Name: history id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.history ALTER COLUMN id SET DEFAULT nextval('public.history_id_seq'::regclass);---- Name: ingredient id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.ingredient ALTER COLUMN id SET DEFAULT nextval('public.ingredient_id_seq'::regclass);---- Name: likes id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.likes ALTER COLUMN id SET DEFAULT nextval('public.likes_id_seq'::regclass);---- Name: newsletters id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.newsletters ALTER COLUMN id SET DEFAULT nextval('public.newsletters_id_seq'::regclass);---- Name: profiles profile_id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.profiles ALTER COLUMN profile_id SET DEFAULT nextval('public.profiles_profile_id_seq'::regclass);---- Name: recipes id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.recipes ALTER COLUMN id SET DEFAULT nextval('public.recipes_id_seq'::regclass);---- Name: users id; Type: DEFAULT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);---- Data for Name: codes; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.codes (id, reset_code, own) FROM stdin;\.---- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.comments (comment_id, comment, has, owns) FROM stdin;2	Try out my recipe everyone!\n	1	13	Wow, i'll have to try this out!	1	54	This looks amazing!	8	65	This looks amazing!	16	66	This looks amazing!	15	67	I made this already and it's the best	1	28	Wow, what an interesting recipe, it looks like it'll taste amazing and the description and the pictures of the steps are so in depth that it makes it look really easy to make. I'll have to try making it when I have free time!	1	3\.---- Data for Name: cookbooks; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.cookbooks (id, name, description, contains) FROM stdin;1	Drinks	\N	12	To try	\N	1\.---- Data for Name: cookbooks_lists; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.cookbooks_lists (id, cookbook_id, recipe_id) FROM stdin;1	1	202	1	153	1	184	2	245	2	10\.---- Data for Name: history; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.history (id, userid, recipe, last_view_time, last_view_date) FROM stdin;33	6	11	\N	\N34	6	21	\N	\N35	6	22	\N	\N36	6	23	20:18:25.499752	2021-07-3137	6	24	\N	\N74	2	1	20:50:36.78188	2021-07-3177	2	24	\N	\N4	1	4	20:27:10.245673	2021-07-317	1	7	20:27:25.256573	2021-07-3140	1	11	\N	\N48	1	19	\N	\N52	1	23	\N	\N9	3	1	20:53:41.885304	2021-07-3150	1	21	20:55:07.200947	2021-07-315	1	5	20:55:44.282879	2021-07-316	1	6	20:55:48.942365	2021-07-318	3	6	\N	\N10	3	8	\N	\N38	1	8	20:56:02.138349	2021-07-3144	1	15	20:32:31.268017	2021-07-3111	3	7	\N	\N53	1	24	20:56:19.227297	2021-07-3145	1	16	20:56:19.692402	2021-07-3113	3	10	\N	\N14	3	11	\N	\N16	3	4	\N	\N15	3	12	18:00:01.562259	2021-07-3119	4	11	\N	\N21	4	12	\N	\N22	4	8	\N	\N18	4	1	18:24:18.378328	2021-07-3123	4	4	\N	\N24	4	14	18:32:40.845609	2021-07-3126	4	16	\N	\N25	4	15	18:49:47.489032	2021-07-3127	6	17	\N	\N29	6	18	\N	\N30	6	19	\N	\N32	6	7	\N	\N31	6	20	19:58:24.702961	2021-07-3149	1	20	20:32:41.058954	2021-07-3151	1	22	20:57:11.898805	2021-07-3147	1	18	20:32:47.81626	2021-07-3139	1	10	20:33:20.785585	2021-07-3157	5	22	\N	\N60	5	18	\N	\N61	5	17	\N	\N58	5	21	20:37:46.113502	2021-07-3163	6	1	\N	\N65	6	4	\N	\N42	1	13	20:39:09.786702	2021-07-3167	6	13	20:39:22.987812	2021-07-3117	3	13	20:39:36.277036	2021-07-3168	7	13	\N	\N20	4	13	20:40:01.405554	2021-07-3156	5	13	20:40:14.588231	2021-07-3162	5	16	20:40:40.274793	2021-07-3155	5	8	20:40:42.844097	2021-07-3154	5	4	20:40:46.222066	2021-07-3169	7	1	\N	\N70	7	4	\N	\N71	7	16	\N	\N72	7	8	20:41:17.606002	2021-07-3173	7	20	\N	\N75	2	16	\N	\N76	2	8	\N	\N43	1	14	20:43:01.285477	2021-07-3141	1	12	20:45:48.823314	2021-07-3146	1	17	20:46:06.390934	2021-07-3159	5	1	20:48:54.309105	2021-07-3166	6	8	20:49:19.534695	2021-07-3164	6	16	20:49:37.171598	2021-07-3128	6	15	20:49:50.13584	2021-07-311	1	1	02:08:02.721898	2021-08-02\.---- Data for Name: ingredient; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.ingredient (id, recipe_id, ingredient, dosage, unit_name) FROM stdin;1	1	white bread	4	slice2	1	romaine heart	1	head3	1	carrot	1	whole4	1	mini cucumbers	2	whole5	1	yellow bell pepper	1	whole6	1	beefsteak tomato	1	whole7	1	mint	3	sprig8	1	parsley	3	sprig9	1	green olives	6	cups10	1	cream cheese	6	tbsp11	1	harissa	1	tbsp12	1	salt	1	tbsp13	1	pepper	1	tbsp15	4	beluga lentils	150	g16	4	swiss chard	300	g17	4	feta cheese	150	g18	4	almonds	70	g19	4	garlic	3	whole20	4	capers	50	g22	4	ground cumin	1	tbsp23	4	chili flakes	1	tsp24	4	cilantro	4	sprig25	4	parsley	4	sprig26	4	basil	4	sprig27	4	red wine vinegar	3	tbsp28	4	salt	3	tbsp29	4	pepper	3	tbsp30	4	lemon zest	3	tbsp31	4	olive oil (for coating)	3	tbsp32	5	pork belly (sliced)	400	g33	5	smoked paprika powder	3	tsp34	5	salt	1	tsp35	5	brown sugar	1	tsp36	5	ground cumin	1	tsp37	5	chili powder	1	tsp38	5	ground coriander	0.5	g39	5	dried thyme	0.5	tsp40	5	pepper	0.5	tsp41	5	mustard	2	tsp42	6	pork chops	400	g43	6	garlic	1	clove44	6	butter	2	tbsp45	6	cilantro	20	g46	6	parsley	10	g47	6	chives	10	g48	6	lettuce	2	whole49	6	corn	2	cob50	6	yoghurt	10	tbsp51	6	lemon (juice)	1	whole52	6	salt	1	tbsp53	6	pepper	1	tbsp54	7	pork	750	g55	7	red wine	200	ml56	7	pappardelle pasta	500	g57	7	carrots	2	whole58	7	celery	2	stalk59	7	onions	2	whole60	7	garlic	2	clove61	7	rosemary	1	sprig62	7	oregano	1	sprig63	7	lemon peels	2	whole64	7	olive oil	100	ml65	7	tomato paste	1	tsp66	7	canned crushed tomatoes	200	g67	7	chicken stock	150	ml68	7	bay leaf	1	whole69	7	nutmeg	0.5	tsp70	7	milk	60	ml71	7	salt	1	tbsp72	7	pepper	1	tbsp73	7	parmesan cheese for serving	20	g21	4	olive	80	ml74	8	all-purpose flour	140	g75	8	cream	200	ml76	8	egg yolks	2	whole77	8	butter	30	g78	8	vanilla bean	1	whole79	8	egg whites	2	whole80	8	sugar	160	g81	8	lemon	1	whole82	8	orange	0.5	whole83	8	blueberries (frozen)	150	g84	8	blueberries (fresh)	250	g85	8	salt	1	tbsp86	8	butter	20	g87	8	confectioner's sugar for garnish	10	g98	10	bananas	3	whole99	10	kiwi	1	whole100	10	almonds	20	g101	10	acai puree	200	g102	10	maple syrup	1	tbsp103	10	almond milk	100	ml104	10	blueberries	20	g105	10	chia seeds	1	tbsp106	11	russet potatoes	500	g107	11	vegetable oil	60	ml108	11	bacon	50	g109	11	butter	1	tbsp110	11	eggs	4	whole111	11	chives	20	g112	11	salt	10	g113	11	black pepper	10	g114	12	chicken breasts	2	whole115	12	white sesame seeds	40	g116	12	black sesame seeds	30	g117	12	green beans	500	g118	12	cilantro	15	g119	12	garlic	2	clove120	12	lime juice	2	tbsp121	12	white miso paste	2	tbsp122	12	agave nectar	1	tsp123	12	coconut oil	3	tbsp124	12	eggs	2	whole125	12	panko breadcrumps	60	g126	12	cayenne pepper	1	tsp127	12	flour	60	g128	12	vegetable oil	3	tbsp129	12	chili flakes	3	tbsp130	12	salt	3	tbsp131	12	pepper	3	tbsp132	13	italian sausages	150	g133	13	red onion	1	whole134	13	eggs	2	whole135	13	butter	2	tbsp137	13	smoked paprika powder	0.25	tsp138	13	sriracha	1	tsp140	13	english muffin	1	whole142	13	salt	1	tsp136	13	mayonnaise	1	tbsp139	13	cheddar cheese	1	slice141	13	white balsamic vinegar	1	tsp143	13	pepper	1	tsp144	14	bacon	5	slice145	14	sandwich bread	2	slice146	14	butter	1	tsp147	14	sweet mustard	1	tbsp148	14	ketchup	1	tbsp149	15	goji berries	4	tbsp150	15	coconut water (chilled)	400	ml151	15	coconut flakes	4	tbsp152	15	ice cubes	5	whole153	15	banana	1	whole154	16	cucumber	90	g155	16	red beets	2	whole156	16	raspberries	120	g157	16	agave syrup	1	tbsp158	16	water (cold)	250	ml159	16	mint	1	sprig160	17	spinach	40	g161	17	pear	0.5	whole162	17	apple	0.5	whole163	17	banana	1	whole164	17	kiwis	2	whole165	17	orange juice	200	ml166	18	ginger	3	g167	18	pineapple	0.5	whole168	18	carrot juice	200	ml169	18	orange juice	100	ml170	18	ice cubes	5	whole171	18	honey	2	tsp172	18	lime (juice)	0.5	whole173	19	pineapple	0.5	whole174	19	honeydew melon	0.5	whole175	19	oat milk	250	ml176	19	honey	4	tbsp177	19	buttermilk	200	ml178	19	oats	3	tbsp179	20	apple	1	whole180	20	cucumber	170	g181	20	avocado	1	whole182	20	cashews	50	g183	20	spinach	35	g184	20	water	130	ml185	20	limes (juice)	1.5	whole186	20	agave syrup	2	tbsp187	20	almond milk	250	ml188	21	eggs	7	whole189	21	bacon	50	g190	21	red bell pepper	1	whole191	21	green onions	2	whole192	21	sugar snap peas	50	g193	21	chives	10	g194	21	goat cheese	100	g195	21	parmesan (grated)	20	g196	21	vegetable oil	20	g197	21	salt	20	g198	21	pepper	20	g199	22	buckwheat flour	170	g200	22	ham	6	slice201	22	swiss cheese	250	g202	22	parsley	15	g203	22	mixed lettuce	120	g204	22	grapeseed oil	6	tbsp205	22	mustard	2	tbsp206	22	vinegar	2	tbsp207	22	water	2	tbsp208	22	sugar	0.75	tsp209	22	buttermilk	350	g210	22	milk	100	ml211	22	egg	1	whole212	22	salt	10	g213	22	pepper	10	g214	22	oil	20	ml215	23	water (lukewarm)	300	ml216	23	sugar	2	tsp217	23	active dry yeast	7	g218	23	dried figs	150	g219	23	walnuts	125	g220	23	flour	350	g221	23	rye flour	90	g222	23	salt	2	tsp223	23	olive oil	1	tsp224	23	flour for dusting	100	g225	24	butter (soft)	100	g226	24	sugar	240	g227	24	eggs	2	whole228	24	flour	125	g229	24	baking powder	1	tsp230	24	milk	100	ml231	24	apples	300	g232	24	lemons (juiced)	2	whole233	24	apple juice	150	ml234	24	cinnamon	1	stalk235	24	salt	10	g236	24	butter	10	g237	24	icing sugar	10	g\.---- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.likes (id, like_status, has, own) FROM stdin;2	0	4	15	0	4	36	1	12	48	1	8	49	1	1	410	1	4	411	1	16	412	1	15	413	1	20	614	1	11	615	1	21	616	1	23	617	1	4	518	1	8	520	1	22	521	1	1	522	-1	18	523	1	16	524	1	21	525	1	1	626	1	16	627	1	4	628	1	8	67	0	13	419	0	13	529	1	1	730	1	16	731	1	8	732	1	20	733	1	1	234	1	16	235	1	8	236	1	24	137	1	14	11	1	1	138	1	1	3\.---- Data for Name: method; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.method (recipe_id, method) FROM stdin;5	Baking6	Baking6	Grilling7	Grilling7	Stewing8	Baking11	Frying12	Frying13	Frying13	Grilling14	Frying21	Baking22	Frying23	Baking\.---- Data for Name: newsletters; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.newsletters (id, subscribed_to, own) FROM stdin;1	t	1\.---- Data for Name: profiles; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.profiles (profile_id, first_name, last_name, display_name, profile_pic, temp_pic, bio, custom_url, owns, sub_count, recipe_count) FROM stdin;2	Brad	Pitt	Brad Pitt	NINTCHDBPICT000660957756-1.jpg	\N	Not much is known about this user... Encourage them to setup their user bio!	2	2	\N	03	Dwayne	Johnson	Dwayne Johnson	Dwayne_Johnson_2_2013.jpg	\N	Not much is known about this user... Encourage them to setup their user bio!	therock	3	\N	04	Arnold	Schwarzenegger	Arnold Schwarzenegger	Arnold_Schwarzenegger_by_Gage_Skidmore_4.jpg	\N	Not much is known about this user... Encourage them to setup their user bio!	4	4	\N	05	Rick	Astley	Rick Astley	602ee9ced3ad27001837f2ac.png	\N	Not much is known about this user... Encourage them to setup their user bio!	nevergonnagiveyouupnevergonnaletyoudownnevergonnarunaroundanddesertyou	5	\N	06	Scarlett	Johansson	Scarlett Johansson	download.jpg	\N	Not much is known about this user... Encourage them to setup their user bio!	6	6	\N	07	Jennifer	Lawrence	Jennifer Lawrence	jennifer-lawrence-smiling-in8974e1-scaled.jpg	\N	Not much is known about this user... Encourage them to setup their user bio!	7	7	\N	01	Shee	esh	Shee esh	14206937_7.png	\N	Come check out all of my recipes!	sheeesh	1	\N	0\.---- Data for Name: recipes; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.recipes (id, name, description, photo, serving, num_of_likes, num_of_dislikes, creates, creator, meal_type, creation_time, creation_date) FROM stdin;7	Pork and red wine ragu with pappardelle	Pork and red wine ragu with pappardelle	Screenshot_1.png	4	0	0	1	Shee esh	Main	16:41:52	2021-07-316	Pork chops with corn salad	Whole pork chops with a corn salad and yoghurt sauce	F6115CB6-2F1A-4B12-A3EF-E514703323B7-medium-original-150.jpg	4	1	0	1	Shee esh	Main	15:55:37	2021-07-314	Tangy marinated lentil salad with feta	Whenever I make this salad, my future self is already looking forward to eating it for lunch the next few days, because it tastes just as good warm as it does cold. It's an edible interplay of many intense ingredients: Feta, capers, three different herbs (you need a total of 20 g / 3/4 oz), almonds, cumin. and chili. The base is rainbow chard (unlike lettuce, it doesn't wilt. In the colder months Tuscan kale also fits very well) and beluga lentils, which are cooked until al dente, i.e. firm to the bite, in plenty of salted water, similar to pasta.	R2392-photo-final-1-medium-landscape-150.jpg	4	3	0	1	Shee esh	Main	04:44:05	2021-07-3112	Seeded chicken schnitzel with green beans	The seeded breading for this recipe also works for pork cutlets and vegetarian alternatives!	R2000-photo-final-001-medium-landscape-150.jpg	2	1	0	3	Dwayne Johnson	Main	17:33:50	2021-07-315	German pork belly skewers	These pork belly barbecue skewers are a must at every German barbecue. We'll show you how to quickly make them yourself with a super tasty dry rub marinade. And when you can't barbecue outside, they are also easy to prepare in your oven. If you are not using pre-cut slices, put the pork belly into the freezer for approx. 30 min and then cut into thin stripes.	2d49fdc8-fd63-4526-97f2-3fe686f3d6590-medium-original-150.jpg	8	0	0	1	Shee esh	Main	04:53:36	2021-07-3118	Safari smoothie	Safari smoothie	RP06_23_14_safari_TitlePicture-medium-landscape-150.jpg	1	0	1	6	Scarlett Johansson	Drink	18:58:07	2021-07-318	Blueberry waffles	Homemade waffles topped with a fresh blueberry sauce	Screenshot_2.png	4	5	0	3	Dwayne Johnson	Dessert	16:57:05	2021-07-3121	Frittata with young vegetables and goat cheese	Frittata with young vegetables and goat cheese	c83f66950c9bc2590a4600bc3eb8fb12.jpg	2	2	0	6	Scarlett Johansson	Starter	20:02:44	2021-07-3113	Perfect Breakfast Burger	This is my ultimate breakfast burger that brings together the essential elements of your fast-food sausage and egg muffin with some easy little frills: The eggs are a custardy, not quite scrambled, not quite omelet, the sausage patty made from no-extra-seasoning needed Italian sausage, you've got classic layer of molten cheddar, plus tangy caramelized red onions for sweetness and a moreish spicy mayo. Watch the video to see how to prep all the elements with your eyes closed.	breakfastborger.png	1	0	0	3	Dwayne Johnson	Breakfast	18:12:50	2021-07-3110	Colourful acai breakfast bowl	Colourful acai breakfast bowl	acai_bowl.png	1	0	0	3	Dwayne Johnson	Snack	17:10:07	2021-07-3124	Fluffy waffles with apple-cinnamon chutney	Fluffy waffles with apple-cinnamon chutney	06_05_FluffigeWaffelnMitApfelZimtChutney_titlePicture-medium-landscape-150.jpg	4	1	0	6	Scarlett Johansson	Dessert	20:21:41	2021-07-311	Big summer veggie sandwich	I wanted to develop something new along the lines of the California veggie sandwich, and this one adds a bit of interest with a harissa and green olive studded cream cheese spread and fresh herbs. You can adjust to your taste of course, and add or remove what you desire. The most important thing? That it's big, and full of veggies!	R2390-photo-final-2-medium-landscape-150.jpg	2	8	0	1	Shee esh	Snack	03:56:40	2021-07-3115	Post-workout smoothie	Post-workout smoothie	RP08_23_02_afterWorkoutSmoothie_TitlePicture-medium-landscape-150.jpg	2	1	0	4	Arnold Schwarzenegger	Drink	18:37:28	2021-07-3117	Wake-up smoothie	Wake-up smoothie	RP04_23_06_Wakeup_TitlePicture-medium-landscape-150.jpg	1	0	0	6	Scarlett Johansson	Drink	18:51:23	2021-07-3114	Easiest bacon sandwich	It doesn't take many ingredients to make my perfect bacon sandwich. It's quick, super crispy, with bacon playing center stage. I love to dip mine in sweet wholegrain mustard, but ketchup isn't a bad choice either!	R2307-photo-final-5-medium-landscape-150.jpg	1	1	0	4	Arnold Schwarzenegger	Starter	18:30:59	2021-07-3119	Moonlight smoothie	Moonlight smoothie	RP06_23_13_moonlight_TitlePicture-medium-landscape-150.jpg	4	0	0	6	Scarlett Johansson	Drink	19:00:20	2021-07-3111	Hash browns with fried eggs and bacon	Hash browns with fried eggs and bacon	hashbrowneggvackon.png	4	1	0	3	Dwayne Johnson	Breakfast	17:20:41	2021-07-3120	Superfood green smoothie	Superfood green smoothie	RP03_23_04_superfoodGreenSmoothie_TitlePicture-medium-landscape-150.jpg	4	2	0	6	Scarlett Johansson	Drink	19:02:51	2021-07-3122	Ham and cheese buckwheat crepes	Ham and cheese buckwheat crepes	R764-photo-final-4x3-medium-landscape-150.jpg	3	1	0	6	Scarlett Johansson	Starter	20:05:56	2021-07-3123	Fig-walnut bread	Fig-walnut bread	R936-photo-final-4x3-medium-landscape-150.jpg	12	1	0	6	Scarlett Johansson	Snack	20:14:50	2021-07-3116	Glowing red smoothie	Glowing red smoothie	RP04_23_07_glowingRed-Smoothie_TitlePicture-medium-landscape-150.jpg	2	5	0	4	Arnold Schwarzenegger	Drink	18:48:18	2021-07-31\.---- Data for Name: recipestep; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.recipestep (recipe_id, step_no, step_comment, photo) FROM stdin;1	1	Trim end from lettuce head and separate the leaves. Peel and grate the carrot and add to a bowl. Season with salt and set aside. Slice cucumber thinly at an angle to get large oblong rounds. Core and deseed bell pepper and thinly slice. Slice tomato into thick slices. Stem mint and parsley and roughly chop. Chop the green olives.	R2390-photo-step-1-large-landscape-150.jpg1	2	Add cream cheese to a bowl and mix with harissa and olives until well combined. If you like it a bit spicier, add more harissa to taste. Use your hands to squeeze the carrots to release any extra moisture. They should be slightly soft, but not too liquidy, so keep squeezing, draining the liquid as needed.	R2390-photo-step-2-large-landscape-150.jpg1	3	To assemble the sandwiches, spread cream cheese evenly over one side of each piece of bread. Stack the tomato, salt, pepper, lettuce, bell pepper, cucumber, herbs, and carrots, then cover with the extra slices of bread, cream cheese side down. Press well with your hands to squish the sandwich together a bit, then slice if desired and serve. Enjoy!	R2390-photo-step-3-large-landscape-150.jpg4	1	Rinse lentils, add to a pot, and cover with 5 cm/ 2in water. Bring to a boil, reduce the heat to medium-low and let simmer with the lid on approx. for 20-30 min. Drain and season with salt.	R2392-photo-step-1-large-landscape-150.jpg4	2	In the meantime, wash and dry Swiss chard. Separate the stems from the leaves. Thinly slice the stems and slice the leaves into thick ribbons. Place in a serving bowl and massage with a little olive oil and salt until soft. Set aside. Roughly chop almonds, then the capers, and finely mince garlic.	R2392-photo-step-2-large-landscape-150.jpg4	3	In a frying pan, heat olive oil over medium-high heat. Add almonds and fry until almost golden brown, then add garlic and fry briefly until fragrant and just about to brown. Remove from heat, then mix in cumin and chili flakes. Add salt and pepper, let cool.	R2392-photo-step-3-large-landscape-150.jpg4	4	Add lentils to the serving bowl. Crumble feta into the bowl with the chard. Tear plucked coriander, parsley, and basil leaves and add to the bowl, leaving some for garnishing. Next add the capers, half of the oil-almond mixture and red wine vinegar. Mix everything well. Season to taste with salt and pepper. Sprinkle the remaining nuts on top and finish with the zest of half a lemon. Can be eaten immediately or kept chilled in the fridge for up to three days. Enjoy!	R2392-photo-step-4-large-landscape-150.jpg5	1	For the dry rub, mix all the dry spices in a small bowl and set aside. Very thinly spread half of the mustard on the pork belly slices and generously sprinkle them with half of the dry rub. Gently rub the mixture into the meat, flip the slices and repeat with the remaining mustard and dry rub. Cover with plastic wrap and let marinade in the fridge for at least 1 hr. Meanwhile, soak the wooden skewers in water to prevent them from burning later.	R2370-photo-step-1-large-landscape-150.jpg5	2	Start your grill or preheat your oven to 220C/425F. If your oven has a grill or broil function, turn that on. Pinch a skewer through one end of the marinated meat, pull down halfway and hold it down with your thumb. Gently stretch the strip of meat and tightly wrap it around the skewer. When you reach the top, pinch through the end of the strip. Pull the meat down the skewer to stretch it out evenly.	R2370-photo-step-2-large-landscape-150.jpg5	3	Place all skewers on a parchment-lined baking sheet. Grill for approx. 8 min., then flip the skewers and bake for another 5 - 7 min., or until slightly charred on the edges. The cooking time on a gas or wood fired grill might vary. Serve immediately and enjoy!	R2370-photo-step-4-large-landscape-150.jpg6	1	Crush garlic clove and set aside. In a large frying pan, heat up some vegetable oil over medium-high heat. Add pork chops to pan, season with salt, and sear for approx. 1 - 2 min. Flip chops, season once more with salt, and sear the other side for another 1 - 2 min. While searing, add garlic and butter. Season with pepper. Transfer chops to a baking dish and bake in the oven at 200C/400F for approx. 10 - 15 min.	06_31_02_porkChopsWithCornSalad_Step01-large-landscape-150.jpg6	2	Roughly chop cilantro. Finely dice parsley and chives. Cut romaine lettuce into bite-sized pieces. Cut corn from the cob.	06_31_02_porkChopsWithCornSalad_Step02-large-landscape-150.jpg6	3	Juice lemon. In a small bowl, mix together yogurt, chives, parsley, salt, pepper, and some of the lemon juice.	06_31_02_porkChopsWithCornSalad_Step03-large-landscape-150.jpg6	4	Add corn and rest of lemon juice to pan with pork chop drippings and saute for approx. 3 - 5 min. until lightly golden brown. Season with salt and pepper.	06_31_02_porkChopsWithCornSalad_Step04-large-landscape-150.jpg6	5	Add lettuce and cilantro to pan and quickly saute for approx. 1 - 2 min. Remove from heat. Ladle some of the corn salad into a serving pan. Arrange the pork chops on top and then garnish with more corn salad and yogurt sauce. Enjoy!	06_31_02_porkChopsWithCornSalad_Step05-large-landscape-150.jpg7	1	Peel and finely dice carrots, celery stalks, onions, and garlic. Tie rosemary, oregano, and lemon peel into a bouquet garni with kitchen twine. Slice pork neck into large pieces and season well with salt. Heat the olive oil in a large ovenproof pot over medium-high heat. Fry in batches until well-browned on both sides, approx. 10 min. Remove from the meat from the pan and set aside.	R1428-photo-step-1-large-landscape-150.jpg7	2	Add diced onions, carrots, and celery stalks to the pot and saute gently on medium-low heat for approx. 10 min. Add the garlic and cook a further 2 min. Then add the tomato paste.	R1428-photo-step-2-large-landscape-150.jpg7	3	Return the fried pork to the pot and add the red wine, let it simmer and reduce, approx. 2 min. Add the crushed tomatoes, chicken stock, herb and lemon bouquet garni, bay leaf, and freshly grated nutmeg. Season with salt and pepper, cover and cook gently for approx. 1 hr. Add the milk and cook a further approx. 30 min., or until the pork is very tender.	R1428-photo-step-3-large-landscape-150.jpg7	4	Gently pull the pork apart using two forks. Cook pasta in a large pot with salted boiling water according to packet instructions until al dente. Drain and add to the ragu, tossing everything together until well combined. Serve with freshly grated Parmesan and pair with a glass of red wine. Enjoy!	R1428-photo-step-4-large-landscape-150.jpg8	1	Zest lemon and orange and set aside. In a standing mixer, add flour, cream, egg yolk, butter, part of vanilla bean, part of lemon zest, and a pinch of salt. Beat until a smooth, even dough forms. Transfer to a bowl and set aside.	21_13_BreakfastBlueberryWaffles_Step01-large-landscape-150.jpg8	2	Add egg whites and part of sugar to standing mixer with a fresh bowl and beat until stiff peaks form.	21_13_BreakfastBlueberryWaffles_Step02-large-landscape-150.jpg8	3	In a large bowl, fold egg whites and sugar into rest of the batter.	21_13_BreakfastBlueberryWaffles_Step03-large-landscape-150.jpg8	4	For the blueberry sauce, caramelize remainder of sugar in a large saucepan over medium-low heat for approx. 3 - 5 min., stirring constantly. Deglaze with lemon and orange juice. Then, add frozen blueberries, remainder of vanilla pod, and zest from lemon and orange and continue to cook for approx. 5 - 7 min. until sauce thickens.	21_13_BreakfastBlueberryWaffles_Step04-large-landscape-150.jpg8	5	Add fresh blueberries to pan and continue to cook for another 1 - 2 min.	21_13_BreakfastBlueberryWaffles_Step05-large-landscape-150.jpg8	6	Preheat a waffle maker and grease with some butter. Pour some of the batter into waffle maker and cook for approx. 3 - 4 min. or until golden brown. Serve straightaway with blueberry sauce. Garnish with confectioner's sugar, if desired.	21_13_BreakfastBlueberryWaffles_Step06-large-landscape-150.jpg10	1	Cut banana into chunks and kiwi into bite sized pieces. Roughly chop almonds.	36_05_ColorfulAcaiBreakfastBowl_Step01b-large-landscape-150.jpg10	2	Add acai puree, remainder of bananas, maple syrup, and almond milk to a blender and blend on high speed for approx. 1 - 2 min. until a smooth, pudding-like consistency is achieved.	36_05_ColorfulAcaiBreakfastBowl_Step02-large-landscape-150.jpg10	3	Pour acai puree into a bowl. Garnish with banana, kiwi, blueberries, almonds, and chia seeds. Enjoy as an energizing breakfast or afternoon pick-me-up!	36_05_ColorfulAcaiBreakfastBowl_Step03b-large-landscape-150.jpg11	1	Finely chop chives. Peel and shred potatoes.	16_01_94_HashBrowns_Steps01_170323_125240-large-landscape-150.jpg11	2	Transfer shredded potatoes to bowl with cold water, stirring until water turns cloudy. Drain and rinse potatoes well under cold water. Transfer potatoes to kitchen towel and twist over sink to wring out as much liquid as possible. Transfer potatoes back to bowl and toss to loosen, then transfer back onto towel and wring out liquid again.	16_01_94_HashBrowns_Steps02-large-landscape-150.jpg11	3	Transfer potatoes back to bowl and toss with salt and a couple grinds of black pepper.	16_01_94_HashBrowns_Steps03_170323_125248-large-landscape-150.jpg11	4	Heat vegetable oil in skillet over medium-high heat. Add potatoes in an even layer and cook, undisturbed, until bottom forms a deep golden-brown crust, approx. 5 min. Use a large plate to flip hash browns in one piece and cook the other side, approx. 5 min. more, adding more vegetable oil if needed. Transfer to a paper towel-lined plate to drain.	16_01_94_HashBrowns_Steps04_170323_125251-large-landscape-150.jpg11	5	Fry bacon in the same skillet set over medium-high heat until crispy. Add butter to skillet and fry eggs in butter until whites are set and edges are crispy. Divide bacon, eggs, and hash browns evenly among serving plates and garnish with chives, salt, and pepper. Enjoy!	16_01_94_HashBrowns_Steps05_170323_125253-large-landscape-150.jpg12	1	Chop the cilantro. Mince the garlic. Add both to a bowl with lime juice, miso, and agave syrup. Mix to combine and set aside.	R2000-photo-step-003-1x1-large-landscape-150.jpg12	2	Add coconut oil to a large frying pan over medium-high heat. Add the green beans and fry until they start to bubble, approx. 10 min. Transfer beans to a bowl with the garlic mixture. Season with chilli flakes, salt, and pepper.	step2schnitzel.png12	3	Halve each chicken breast. Place the cutlets between two sheets of plastic wrap and carefully flatten them with a rolling pin. Season cutlets with salt and pepper. In a small bowl, whisk the eggs with a pinch of salt. In another bowl, mix together panko, sesame, and cayenne pepper.	R2000-photo-step-003-1x1-large-landscape-150.jpg12	4	Dredge each cutlet in flour, followed by eggs, and then the sesame-panko mixture. Add oil to a pan over medium-high heat. Add chicken and let cook, approx. 2 - 3 min. on each side.	step4schnitzel.png12	5	Blot the schnitzel with paper towels to remove any excess oil. Serve with green beans and garnish with cilantro. Enjoy!	R2000-photo-step-001-1x1-large-landscape-150.jpg13	1	Finely slice onion into rings. Melt butter in a small pot or frying pan over medium heat. Add onions and stir briefly. Season with salt, lower heat slightly and let cook until caramelized, for approx. 15 - 20 min. Meanwhile, in a small bowl, mix mayonnaise, smoky paprika powder, and sriracha and set aside.	R2301-photo-step-2-large-landscape-150.jpg13	2	Preheat the oven to a 'keep warm' setting. Remove Italian sausage meat from casing. Use your fingers to crumble the meat until fine, with no large clumps, and press very tightly into an egg ring to create a patty, you can also make your own ring using aluminium foil. Heat a frying pan over high heat. Once the pan is hot, carefully add the sausage patty (still in the ring). Fry for approx. 3-4 min, or until well-browned. Carefully flip it over, remove the ring, and place a slice of cheddar on top to melt. Continue to fry for another 3 min., until the cheese is very melted and the patty browned. Transfer to a plate and place in the warmed oven. Don't wash up the pan, you'll use the residual fat in the next step.	R2301-photo-step-6-large-landscape-150.jpg13	3	Slice English muffin in half and transfer to the oven to let it warm while you quickly cook the eggs. To make the 'scromlet', crack eggs into a bowl, season with salt and pepper, and whisk very well. Add remaining butter to the same frying pan over medium high heat. Once melted and stirred into the sausage fat, add in eggs and allow to set a little on the bottom. Startiung in the top corner, carefully push the eggs around the pan in a circular motion, bringing everything into the center in folds. Keep turning and folding gently until the eggs come together and are still glossy. The whole process should take under a minute. Gently fold in any under-cooked parts to help them set. Remove sausage patty from oven and place the egg on top.	R2301-photo-step-8-large-landscape-150.jpg13	4	Stir vinegar through the onions as the final seasoning. To assemble the burger, smear mayonnaise on the bottom half of the muffin, add with sausage patty and eggs, caramelized onions onion and muffin 'lid'. Enjoy! and don't forget a napkin!	R2301-photo-step-10-large-landscape-150.jpg14	1	Add bacon strips to a frying pan over medium-high heat. Fry until crispy on both sides, approx. 2-3 min.	R2307-photo-step-3-large-landscape-150.jpg14	2	In the meantime, butter each slice of bread on one side. Take the bacon out of the pan and place it on one of the slices of bread. Top with another bread slice and add back to the pan. The bacon fat and all the toasty flavours in the pan will absorb into the bread. Fry the sandwich until golden brown on the first side, approx 2 min. Then flip it over and weigh it down with a small saucepan and continue frying until golden brown. Cut crosswise and serve while still warm with sweet mustard. Enjoy!	R2307-photo-step-1-large-landscape-150.jpg15	1	Add goji berries to a small bowl. Pour in parts of the coconut water and allow to soak for approx. 20 - 30 min.	RP08_23_02_afterWorkoutSmoothie_Step01-large-landscape-150.jpg15	2	Add cold coconut water, soaked berries, coconut flakes and ice cubes to blender. Blend for approx. 1 - 2 min.	RP08_23_02_afterWorkoutSmoothie_Step02-large-landscape-150.jpg15	3	Break banana into pieces and add to blender. Mix for 2 - 3 more min., until well incorporated and smooth. Enjoy immediately!	RP08_23_02_afterWorkoutSmoothie_Step03-large-landscape-150.jpg16	1	Peel and slice cucumber. Dice red beet.	RP04_23_07_glowingRed-Smoothie_Step01-large-landscape-150.jpg16	2	Place cucumber, red beets, frozen raspberries, agave syrup, and water into blender. Pick mint leaves and add to blender.	RP04_23_07_glowingRed-Smoothie_Step02-large-landscape-150.jpg16	3	Blend on high speed for approx. 2 - 3 min. until smooth. Enjoy as an energizing snack or breakfast.	RP04_23_07_glowingRed-Smoothie_Step03-large-landscape-150.jpg17	1	Gently wash spinach. Roughly chop spinach, pear, apple, and banana. Add all ingredients to blender.	RP04_23_06_Wakeup_Step01-large-landscape-150.jpg17	2	Spoon out kiwis and add to blender.	RP04_23_06_Wakeup_Step02-large-landscape-150.jpg17	3	Pour in orange juice.	RP04_23_06_Wakeup_Step03-large-landscape-150.jpg17	4	Blend until smooth, approx. 2 - 3 min. Ready to enjoy immediately.	RP04_23_06_Wakeup_Step04-large-landscape-150.jpg18	1	Peel and slice ginger. Cut pineapple into chunks.	RP06_23_14_safari_Step01-large-landscape-150.jpg18	2	Add pineapple, ginger, carrot juice, orange juice, ice cubes, and honey to blender. Add lime juice.	RP06_23_14_safari_Step02-large-landscape-150.jpg18	3	Blend all ingredients until smooth for approx. 2 - 3 min. Enjoy immediately.	RP06_23_14_safari_Step03-large-landscape-150.jpg19	1	Cut pineapple and honeydew melon into slices.	RP06_23_13_moonlight_Step01-large-landscape-150.jpg19	2	Add melon and pineapple slices, oat milk, honey, buttermilk and oats to blender.	RP06_23_13_moonlight_Step02-large-landscape-150.jpg19	3	Blend all ingredients until smooth for approx. 2 - 3 min. Enjoy immediately.	RP06_23_13_moonlight_Step03-large-landscape-150.jpg20	1	Roughly chop apple, cucumber, cashews, and avocado.	RP03_23_04_superfoodGreenSmoothie_Step01-large-landscape-150.jpg20	2	Add chopped apple, cucumber, cashews and avocado to blender. Add spinach, water, lime juice, agave syrup. Pour in almond milk. Then, blend on high until smooth, approx. 2 - 3 min. Enjoy right away!	RP03_23_04_superfoodGreenSmoothie_Step02-large-landscape-150.jpg21	1	Preheat the oven to 180C/350F. Finely dice bacon and pepper. Slice green onions into fine rings and sugar snap peas into thin strips. Finely slice chives.	03_15_FrittataMitJungemGemueseundZiegenkaese_step01-large-landscape-150.jpg21	2	Fry bacon and pepper in some vegetable oil. Add green onions and sugar snap peas and continue to saute. Season well with salt and pepper and cook on medium heat for approx. 4 - 5 min.	03_15_FrittataMitJungemGemueseundZiegenkaese_step02-large-landscape-150.jpg21	3	Meanwhile, beat eggs with chives and season generously with salt and pepper.	03_15_FrittataMitJungemGemueseundZiegenkaese_step03-large-landscape-150.jpg21	4	Now add half of the goat cheese to the fried vegetables and gently mix in. Pour the egg mixture over the vegetables.	03_15_FrittataMitJungemGemueseundZiegenkaese_step04-large-landscape-150.jpg21	5	As soon as the mixture has started to set on the bottom, add the remaining goat cheese on top. Lightly season with pepper and bake at 180C/350F for approx. 5 - 6 min. Grate Parmesan on the frittata and serve warm.	03_15_FrittataMitJungemGemueseundZiegenkaese_step05-large-landscape-150.jpg22	1	Grate cheese and wash and chop parsley. Set aside. Wash lettuce and add to large mixing bowl.	R764-photo-step-1-large-landscape-150.jpg22	2	For the dressing, add grapeseed oil, mustard, vinegar, water, and some of the sugar to a small bowl and mix until well combined.	R764-photo-step-2-large-landscape-150.jpg22	3	For the batter, mix buckwheat flour, buttermilk, milk, and eggs in a large bowl and season with remaining sugar, salt, and pepper. Set aside to rest for approx. 10 min.	R764-photo-step-3-large-landscape-150.jpg22	4	Heat oil in a large non-stick frying pan set over medium heat. Ladle batter into pan and fry until golden brown for approx. 2 or 3 min, or until crepe is cooked through. Sprinkle with some cheese and parsley over crepe and top with ham. As soon as the cheese begins to melt, start to roll up the crepe and remove from pan. Repeat with the reamining batter and filling ingredients. Mix salad with dressing and serve alongside the crepes. Enjoy!	R764-photo-step-4-large-landscape-150.jpg23	1	In a large mixing bowl, combine water, sugar, and yeast and set aside for 5 min, or until foamy.	R936-photo-step-1-large-landscape-150.jpg23	2	Cut figs into small pieces and roughly chop walnuts.	R936-photo-step-2-large-landscape-150.jpg23	3	In a large mixing bowl or the bowl of a stand mixer, mix flour, rye flour, half of the figs and walnuts, and salt. Add yeast mixture and stir to combine. On a clean and lightly flour-dusted work surface, knead dough until smooth and elastic, approx. 10 min.. Form dough to a ball and transfer to a mixing bowl lightly coated with oil, cover with a damp kitchen towel, and leave to rise for 90 min..	R936-photo-step-3-large-landscape-150.jpg23	4	Line a baking sheet with parchment paper, if needed. Transfer dough to a work surface lightly dusted with flour and press gently to deflate. Add remaining figs and walnut on top of dough and knead until everything is well combined. Roll dough into a ball and transfer to baking tray, cover with a damp towel, and leave to rise for approx. 1 hr.	R936-photo-step-4-large-landscape-150.jpg23	5	Preheat oven to 180C/350F. Bake bread on the middle rack for approx. 45 min, or until golden brown. Enjoy!	R936-photo-step-5-large-landscape-150.jpg24	1	Beat butter and approx. a third of the sugar in a standing mixer or with a hand mixer until fluffy.	06_05_FluffigeWaffelnMitApfelZimtChutney_step01-large-landscape-150.jpg24	2	Add eggs one after the other and mix until incorporated.	06_05_FluffigeWaffelnMitApfelZimtChutney_step02-large-landscape-150.jpg24	3	Add flour, baking powder, a pinch of salt, and milk. Continue to mix until a smooth batter forms.	06_05_FluffigeWaffelnMitApfelZimtChutney_step03-large-landscape-150.jpg24	4	For the chutney, cut apples into fine cubes.	06_05_FluffigeWaffelnMitApfelZimtChutney_step04-large-landscape-150.jpg24	5	Caramelize the remaining sugar in a small saucepan. Deglaze with lemon juice and reduce until the caramel is velvety.	06_05_FluffigeWaffelnMitApfelZimtChutney_step05-large-landscape-150.jpg24	6	Add apple juice to the caramel and reduce on medium-high heat for another 5 min.	06_05_FluffigeWaffelnMitApfelZimtChutney_step06-large-landscape-150.jpg24	7	Add apple pieces, cinnamon stick and a pinch of salt and allow to reduce on medium heat for approx. 5 - 10 min. until the fruit has softened.	06_05_FluffigeWaffelnMitApfelZimtChutney_step07-large-landscape-150.jpg24	8	Meanwhile, heat the waffle iron and grease if necessary. Bake the waffles in the waffle iron until golden. Serve warm with icing sugar and apple chutney.	06_05_FluffigeWaffelnMitApfelZimtChutney_step08-large-landscape-150.jpg\.---- Data for Name: starred_recipes; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.starred_recipes (recipe_id, contains) FROM stdin;24	116	11	1\.---- Data for Name: subscribed; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.subscribed (subscribed_id, contains) FROM stdin;1	17	16	13	11	31	6\.---- Data for Name: subscriber; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.subscriber (subscriber_id, contains) FROM stdin;1	11	71	61	33	16	1\.---- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres--COPY public.users (id, password, email) FROM stdin;1	sha256$XCreM8MB$fc1ba56f0dbd8ad557f4593a1ef20113274e732e3fb6f023dc9c885f5cdac5c6	w18b.sheeesh@gmail.com2	sha256$EOJ3YL4n$96a378178b9b7dd6d64abd39f7c63a8914f3581dd1daaf5c281caa15170c9782	myrecipes2@outlook.com3	sha256$IWOwZMqx$b36a701df922e0ea11f8f1fa87bf4b543f380ba5b7c49f2cb9af38a96fe2e554	myrecipes3@gmail.com4	sha256$6btGTUc9$3a58ade0a5ed22f349d5fdd6c54c7dcf8445e127b1389889912451aa1577c939	myrecipes4@yahoo.com5	sha256$GFH8PrEr$f8b12c0d5e1254f3d9389906168ed9d6937852819ac3cba962196b1f2466b264	myrecipes5@gmail.com6	sha256$5NAer0Ka$2b915c03c3af2d5740eec7ca944737beb3f64d4479b60e294968feb637040fd0	myrecipes6@gmail.com7	sha256$mipEEnzp$bb3c50c2bd68f5ad5dd1fdf2fed2a2dfee44db91ca11d79f1d2cb6eed38622a3	myrecipes7@gmail.com\.---- Name: codes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.codes_id_seq', 1, false);---- Name: comments_comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.comments_comment_id_seq', 8, true);---- Name: cookbooks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.cookbooks_id_seq', 2, true);---- Name: cookbooks_lists_cookbook_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.cookbooks_lists_cookbook_id_seq', 1, false);---- Name: cookbooks_lists_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.cookbooks_lists_id_seq', 5, true);---- Name: history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.history_id_seq', 77, true);---- Name: ingredient_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.ingredient_id_seq', 237, true);---- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.likes_id_seq', 38, true);---- Name: newsletters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.newsletters_id_seq', 1, true);---- Name: profiles_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.profiles_profile_id_seq', 7, true);---- Name: recipes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.recipes_id_seq', 24, true);---- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres--SELECT pg_catalog.setval('public.users_id_seq', 7, true);---- Name: codes codes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.codes    ADD CONSTRAINT codes_pkey PRIMARY KEY (id);---- Name: comments comments_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.comments    ADD CONSTRAINT comments_pkey PRIMARY KEY (comment_id);---- Name: cookbooks cookbooks_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks    ADD CONSTRAINT cookbooks_id_key UNIQUE (id);---- Name: cookbooks_lists cookbooks_lists_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks_lists    ADD CONSTRAINT cookbooks_lists_pkey PRIMARY KEY (id);---- Name: cookbooks cookbooks_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks    ADD CONSTRAINT cookbooks_pkey PRIMARY KEY (id, contains);---- Name: history history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.history    ADD CONSTRAINT history_pkey PRIMARY KEY (id);---- Name: ingredient ingredient_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.ingredient    ADD CONSTRAINT ingredient_pkey PRIMARY KEY (id);---- Name: likes likes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.likes    ADD CONSTRAINT likes_pkey PRIMARY KEY (id);---- Name: method method_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.method    ADD CONSTRAINT method_pkey PRIMARY KEY (recipe_id, method);---- Name: newsletters newsletters_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.newsletters    ADD CONSTRAINT newsletters_pkey PRIMARY KEY (id);---- Name: profiles profiles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.profiles    ADD CONSTRAINT profiles_pkey PRIMARY KEY (profile_id);---- Name: recipes recipes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.recipes    ADD CONSTRAINT recipes_pkey PRIMARY KEY (id);---- Name: recipestep recipestep_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.recipestep    ADD CONSTRAINT recipestep_pkey PRIMARY KEY (recipe_id, step_no);---- Name: starred_recipes starred_recipes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.starred_recipes    ADD CONSTRAINT starred_recipes_pkey PRIMARY KEY (recipe_id, contains);---- Name: subscribed subscribed_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.subscribed    ADD CONSTRAINT subscribed_pkey PRIMARY KEY (subscribed_id, contains);---- Name: subscriber subscriber_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.subscriber    ADD CONSTRAINT subscriber_pkey PRIMARY KEY (subscriber_id, contains);---- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.users    ADD CONSTRAINT users_email_key UNIQUE (email);---- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.users    ADD CONSTRAINT users_pkey PRIMARY KEY (id);---- Name: codes codes_own_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.codes    ADD CONSTRAINT codes_own_fkey FOREIGN KEY (own) REFERENCES public.users(id);---- Name: comments comments_has_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.comments    ADD CONSTRAINT comments_has_fkey FOREIGN KEY (has) REFERENCES public.recipes(id);---- Name: comments comments_owns_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.comments    ADD CONSTRAINT comments_owns_fkey FOREIGN KEY (owns) REFERENCES public.users(id);---- Name: cookbooks cookbooks_contains_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks    ADD CONSTRAINT cookbooks_contains_fkey FOREIGN KEY (contains) REFERENCES public.users(id);---- Name: cookbooks_lists cookbooks_lists_cookbook_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks_lists    ADD CONSTRAINT cookbooks_lists_cookbook_id_fkey FOREIGN KEY (cookbook_id) REFERENCES public.cookbooks(id);---- Name: cookbooks_lists cookbooks_lists_recipe_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.cookbooks_lists    ADD CONSTRAINT cookbooks_lists_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.recipes(id);---- Name: history history_recipe_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.history    ADD CONSTRAINT history_recipe_fkey FOREIGN KEY (recipe) REFERENCES public.recipes(id);---- Name: history history_userid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.history    ADD CONSTRAINT history_userid_fkey FOREIGN KEY (userid) REFERENCES public.users(id);---- Name: ingredient ingredient_recipe_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.ingredient    ADD CONSTRAINT ingredient_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.recipes(id);---- Name: likes likes_has_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.likes    ADD CONSTRAINT likes_has_fkey FOREIGN KEY (has) REFERENCES public.recipes(id);---- Name: likes likes_own_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.likes    ADD CONSTRAINT likes_own_fkey FOREIGN KEY (own) REFERENCES public.users(id);---- Name: method method_recipe_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.method    ADD CONSTRAINT method_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.recipes(id);---- Name: newsletters newsletters_own_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.newsletters    ADD CONSTRAINT newsletters_own_fkey FOREIGN KEY (own) REFERENCES public.users(id);---- Name: profiles profiles_owns_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.profiles    ADD CONSTRAINT profiles_owns_fkey FOREIGN KEY (owns) REFERENCES public.users(id);---- Name: recipes recipes_creates_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.recipes    ADD CONSTRAINT recipes_creates_fkey FOREIGN KEY (creates) REFERENCES public.users(id);---- Name: recipestep recipestep_recipe_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.recipestep    ADD CONSTRAINT recipestep_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.recipes(id);---- Name: starred_recipes starred_recipes_contains_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.starred_recipes    ADD CONSTRAINT starred_recipes_contains_fkey FOREIGN KEY (contains) REFERENCES public.profiles(profile_id);---- Name: starred_recipes starred_recipes_recipe_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.starred_recipes    ADD CONSTRAINT starred_recipes_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.recipes(id);---- Name: subscribed subscribed_contains_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.subscribed    ADD CONSTRAINT subscribed_contains_fkey FOREIGN KEY (contains) REFERENCES public.profiles(profile_id);---- Name: subscriber subscriber_contains_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres--ALTER TABLE ONLY public.subscriber    ADD CONSTRAINT subscriber_contains_fkey FOREIGN KEY (contains) REFERENCES public.profiles(profile_id);---- PostgreSQL database dump complete--